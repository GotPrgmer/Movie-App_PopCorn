# Generated by Django 3.2.13 on 2022-11-24 03:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('genres', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='genrename', to='movies.genre')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_genre', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adult', models.BooleanField()),
                ('movietitle', models.CharField(max_length=100)),
                ('original_title', models.CharField(max_length=100)),
                ('actors', models.TextField()),
                ('director', models.CharField(max_length=30)),
                ('rate', models.FloatField()),
                ('released_date', models.DateField()),
                ('overview', models.TextField(blank=True)),
                ('posterpath', models.TextField()),
                ('backdrop', models.TextField()),
                ('genres', models.ManyToManyField(related_name='genre', to='movies.Genre')),
                ('userslike', models.ManyToManyField(related_name='userlike', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
